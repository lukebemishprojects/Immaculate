import org.gradle.api.attributes.plugin.GradlePluginApiVersion

plugins {
    id 'java-gradle-plugin'
    alias cLibs.plugins.gradlepublish
}

def gradleVersion = "8.8"

['apiElements', 'runtimeElements'].each {
    configurations.named(it).configure {
        attributes {
            attribute(
                    GradlePluginApiVersion.GRADLE_PLUGIN_API_VERSION_ATTRIBUTE,
                    objects.named(GradlePluginApiVersion, gradleVersion)
            )
        }
    }
}

dependencies {
    compileOnly "dev.gradleplugins:gradle-api:$gradleVersion"
    implementation 'commons-io:commons-io:2.16.1'
    implementation 'org.eclipse.jgit:org.eclipse.jgit:6.10.0.202406032230-r'
    implementation 'dev.lukebemish:forkedtaskexecutor:0.1.4'
}

gradlePlugin {
    website = 'https://github.com/lukebemishprojects/Immaculate'
    vcsUrl = 'https://github.com/lukebemishprojects/Immaculate.git'

    plugins {
        immaculatePlugin {
            id = 'dev.lukebemish.immaculate'
            implementationClass = 'dev.lukebemish.immaculate.ImmaculatePlugin'
            displayName = 'Immaculate'
            description = 'A plugin for applying various code formatting'
            tags.addAll(['format', 'style'])
        }
    }
}

jar {
    manifest {
        attributes(
            'Implementation-Version': version as String
        )
    }
}

tasks.named('wrapper', Wrapper) {
    distributionType = Wrapper.DistributionType.ALL
}
